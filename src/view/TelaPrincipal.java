/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TelaPrincipal.java
 *
 * Created on 08/10/2009, 23:33:46
 */
package view;

import beans.Aluno;
import beans.Aula;
import beans.Pessoa;
import beans.Professor;
import controlador.ControladorImpressaoDigital;
import controlador.ControladorJanelas;
import java.awt.Color;
import java.awt.Container;
import java.awt.FlowLayout;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.swing.JComponent;
import javax.swing.JPanel;

/**
 *
 * @author Emilio
 */
public class TelaPrincipal extends javax.swing.JFrame implements JPanelImpressao{

   ControladorJanelas controladorJanelas = new ControladorJanelas(this);
   //classe que controla a conexao com griaule biometrics fingerprintSDK
   ControladorImpressaoDigital procedimentosSDK;

    /** Creates new form TelaPrincipal */
    public TelaPrincipal() {
        initComponents();
        this.inicializar();
        this.procedimentosSDK.inicializarCaptura();
    }    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Operações"));
        jPanel1.setName("jPanel1"); // NOI18N

        jButton1.setText("Cadastros");
        jButton1.setActionCommand("Cadastro");
        jButton1.setName("jButtonCadastro"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Iniciar Aula");
        jButton2.setName("jButtonIniciarAula"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(484, Short.MAX_VALUE))
        );

        jButton1.getAccessibleContext().setAccessibleName("jButton1");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Operações"));
        jPanel2.setName("jPanelContainer"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 942, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 597, Short.MAX_VALUE)
        );

        jMenuBar1.setName("jMenuBar1"); // NOI18N

        jMenu1.setText("Arquivo");
        jMenu1.setName("jMenu1"); // NOI18N
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ajuda");
        jMenu2.setName("jMenu2"); // NOI18N
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2.getAccessibleContext().setAccessibleName(null);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private JPanel montaPainel(TelaEscolhida telaEscolhida) {

        switch (telaEscolhida) {
            case CADASTROS:
                JPanel p = new JPanelCadastros(this.getControladorJanelas());
                p.setVisible(true);
                return p;
            case INICIA_AULA:
                p = new JPanelIniciaAula(this.getControladorJanelas());
                p.setVisible(true);
                return p;
            case CADASTRO_ALUNO:
                p = new JPanelCadastraAluno(this.getControladorJanelas());
                p.setVisible(true);
                return p;
            case CADASTRO_PROFESSOR:
                p = new JPanelCadastraProfessor(this.getControladorJanelas());
                p.setVisible(true);
                return p;
            case CADASTRA_IMPRESSAO_ALUNO:
                p = new JPanelCadastraImpressaoAluno(this.getControladorJanelas());
                p.setVisible(true);
                return p;
            case CADASTRA_IMPRESSAO_PROFESSOR:
                p = new JPanelCadastraImpressaoProfessor(this.getControladorJanelas());
                p.setVisible(true);
                return p;
            default:
                return null;
                
        }

    }
    private JPanel montaPainel(TelaEscolhida telaEscolhida, Pessoa pessoa) {

        switch (telaEscolhida) {
            case CADASTRA_IMPRESSAO_ALUNO:
                JPanel p = new JPanelCadastraImpressaoAluno((Aluno)pessoa, this.getControladorJanelas());
                p.setVisible(true);
                return p;
            case CADASTRA_IMPRESSAO_PROFESSOR:
                p = new JPanelCadastraImpressaoProfessor((Professor)pessoa, this.getControladorJanelas());
                p.setVisible(true);
                return p;
            default:
                return null;
        }

    }

    private JPanel montaPainel(TelaEscolhida telaEscolhida, Aula aula) {

        switch (telaEscolhida) {
            case AULA:
                JPanel p = new JPanelAula(this.controladorJanelas, aula);
                p.setVisible(true);
                return p;
            default:
                return null;
        }

    }
    
    public void atualizarTela(TelaEscolhida telaEscolhida) {
        Container c = this.getContentPane();
        this.jPanel2.removeAll();
        this.jPanel2.add(montaPainel(telaEscolhida), JComponent.CENTER_ALIGNMENT);
        this.jPanel2.setLayout(new FlowLayout(FlowLayout.CENTER));
        c.validate();
        c.repaint();
    }

    public void atualizarTela(TelaEscolhida telaEscolhida, Pessoa pessoa) {
        Container c = this.getContentPane();
        this.jPanel2.removeAll();
        this.jPanel2.add(montaPainel(telaEscolhida, pessoa), JComponent.CENTER_ALIGNMENT);
        this.jPanel2.setLayout(new FlowLayout(FlowLayout.CENTER));
        c.validate();
        c.repaint();
    }

    public void atualizarTela(TelaEscolhida telaEscolhida, Aula aula) {
        Container c = this.getContentPane();
        this.jPanel2.removeAll();
        this.jPanel2.add(montaPainel(telaEscolhida, aula), JComponent.CENTER_ALIGNMENT);
        this.jPanel2.setLayout(new FlowLayout(FlowLayout.CENTER));
        c.validate();
        c.repaint();
    }

    public ControladorJanelas getControladorJanelas() {
        return controladorJanelas;
    }

    public void setControladorJanelas(ControladorJanelas controladorJanelas) {
        this.controladorJanelas = controladorJanelas;
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.atualizarTela(TelaEscolhida.CADASTROS);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.atualizarTela(TelaEscolhida.INICIA_AULA);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    //classes para lidar com o leitor de impressao digital e conexao com o fingerprintSDK da GriauleBiometrics
    /**
     * Realiza a inicializacao da classe que contem os procedimentos principais.
     **/
    public void inicializar() {
        String grFingerNativeDirectory = new File("/usr/local/Griaule/Fingerprint SDK Java 2009/bin").getAbsolutePath();
        ControladorImpressaoDigital.setFingerprintSDKNativeDirectory(grFingerNativeDirectory);
        //Cria uma instancia de ControladorImpressaoDigital
        this.procedimentosSDK = new ControladorImpressaoDigital(this);
    }

    //método para vizualizacao da impressao capturada
    public void showImage(BufferedImage Image) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public ControladorImpressaoDigital registrarPainel(JPanelImpressao painelImpressao) {
        this.procedimentosSDK.setUi(painelImpressao);
        return this.procedimentosSDK;
    }

}
