-- phpMyAdmin SQL Dump
-- version 3.1.1
-- http://www.phpmyadmin.net
--
-- Servidor: localhost
-- Tempo de Geração: Nov 20, 2009 as 12:45 PM
-- Versão do Servidor: 5.1.30
-- Versão do PHP: 5.2.8

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";

--
-- Banco de Dados: `presencadigitaldb`
--
CREATE DATABASE `presencadigitaldb` DEFAULT CHARACTER SET latin1 COLLATE latin1_swedish_ci;
USE `presencadigitaldb`;

-- --------------------------------------------------------

--
-- Estrutura da tabela `tb_alunos`
--

CREATE TABLE IF NOT EXISTS `tb_alunos` (
  `nome` varchar(30) NOT NULL,
  `cpf` varchar(11) NOT NULL,
  `rg` varchar(20) NOT NULL,
  `rua` varchar(30) NOT NULL,
  `cidade` varchar(30) NOT NULL,
  `estado` varchar(2) NOT NULL,
  `telefone` varchar(12) DEFAULT NULL,
  `impressaoDigital` blob,
  `ra` varchar(8) NOT NULL,
  `id_aluno` int(11) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id_aluno`),
  UNIQUE KEY `cpf` (`cpf`,`ra`),
  UNIQUE KEY `cpf_2` (`cpf`),
  UNIQUE KEY `cpf_3` (`cpf`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=40 ;

--
--

-- --------------------------------------------------------

--
-- Estrutura da tabela `tb_aulas`
--

CREATE TABLE IF NOT EXISTS `tb_aulas` (
  `id_aula` int(11) NOT NULL AUTO_INCREMENT,
  `id_materia` int(11) NOT NULL,
  `hora_inicio` time NOT NULL,
  `hora_fim` time NOT NULL,
  `data` date NOT NULL,
  PRIMARY KEY (`id_aula`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=81 ;

--
--- --------------------------------------------------------

--
-- Estrutura da tabela `tb_materias`
--

CREATE TABLE IF NOT EXISTS `tb_materias` (
  `id_materia` int(11) NOT NULL AUTO_INCREMENT,
  `nome` varchar(30) NOT NULL,
  `carga_horaria` time NOT NULL,
  `id_professor` int(11) NOT NULL,
  `id_turma` varchar(8) NOT NULL,
  PRIMARY KEY (`id_materia`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=40 ;

--
- --------------------------------------------------------

--
-- Estrutura da tabela `tb_matricula_materia`
--

CREATE TABLE IF NOT EXISTS `tb_matricula_materia` (
  `id_matricula` int(11) NOT NULL AUTO_INCREMENT,
  `id_materia` int(11) NOT NULL,
  `id_aluno` int(11) NOT NULL,
  `id_turma` varchar(11) NOT NULL,
  `status` tinyint(1) NOT NULL,
  PRIMARY KEY (`id_matricula`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=95 ;

--
--------------------------------------------------------

--
-- Estrutura da tabela `tb_presencas`
--

CREATE TABLE IF NOT EXISTS `tb_presencas` (
  `id_aluno` int(11) NOT NULL,
  `id_aula` int(11) NOT NULL,
  `hora_entrada` time NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


-- --------------------------------------------------------

--
-- Estrutura da tabela `tb_professores`
--

CREATE TABLE IF NOT EXISTS `tb_professores` (
  `nome` varchar(30) NOT NULL,
  `cpf` varchar(11) NOT NULL,
  `rg` varchar(20) NOT NULL,
  `rua` varchar(30) NOT NULL,
  `cidade` varchar(30) NOT NULL,
  `estado` varchar(2) NOT NULL,
  `telefone` varchar(12) DEFAULT NULL,
  `impressaoDigital` blob,
  `id_professor` int(11) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id_professor`),
  UNIQUE KEY `cpf` (`cpf`),
  UNIQUE KEY `cpf_2` (`cpf`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=24 ;

-
-- Estrutura da tabela `tb_usuarios`
--

CREATE TABLE IF NOT EXISTS `tb_usuarios` (
  `id_usuario` int(11) NOT NULL AUTO_INCREMENT,
  `login` varchar(20) NOT NULL,
  `cpf` varchar(14) NOT NULL,
  `senha` varchar(10) NOT NULL,
  PRIMARY KEY (`id_usuario`),
  UNIQUE KEY `login` (`login`,`cpf`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=6 ;

 - - Procedure para verificar presenca em aulas

DROP PROCEDURE `sp_Relatorio_Faltas`//
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Relatorio_Faltas`(param_id_aluno INT)
BEGIN



-- Declara as variáveis que serão usadas para aramenar temporariamente os calores das linhas do cursor
DECLARE var_id_aluno VARCHAR(30);
DECLARE var_nome VARCHAR(30);
DECLARE var_ra VARCHAR(8);
DECLARE var_id_materia INT(11);
DECLARE var_total_aulas INT(11);



-- Declara as variáveis usadas pelo cursor e pelo loop
DECLARE fim BOOLEAN;
DECLARE controle INT DEFAULT 0;
DECLARE linhas INT DEFAULT 0;



-- Insere os dados do aluno no cursor
DECLARE cursor_relatorio CURSOR FOR
  SELECT e.id_aluno, e.nome, e.ra, m.id_materia
  FROM tb_aulas a

  INNER JOIN tb_materias m
  ON m.id_materia = a.id_materia

  INNER JOIN tb_presencas p
  ON p.id_aula = a.id_aula

  INNER JOIN tb_alunos e
  ON e.id_aluno = p.id_aluno

  WHERE e.id_aluno = param_id_aluno

  GROUP BY a.id_materia;



-- Define um handler para tratar as exceções
DECLARE CONTINUE HANDLER FOR NOT FOUND
SET fim = TRUE;



-- Exclui a tabela para loberar memória
DROP TABLE IF EXISTS `tb_Relatorio_Faltas`;



-- Cria a tabela temporária (em memóra) onde serão sumarizados os dados sobre as faltas do aluno
CREATE TEMPORARY TABLE tb_Relatorio_Faltas
(
  `id_aluno` INT(11),
  `nome` VARCHAR(30),
  `ra` VARCHAR(8),
  `id_materia` INT(11),
  `materia` VARCHAR(30),
  `aulas` INT(11),
  `presencas` INT(11)
)
ENGINE=MEMORY;



-- Insere os dados do aluno na tabela
INSERT INTO tb_Relatorio_Faltas (id_aluno, nome, ra, id_materia, materia, presencas)
  SELECT e.id_aluno, e.nome, e.ra, m.id_materia, m.nome, COUNT(p.id_aula) AS presencas
  FROM tb_aulas a

  INNER JOIN tb_materias m
  ON m.id_materia = a.id_materia

  INNER JOIN tb_presencas p
  ON p.id_aula = a.id_aula

  INNER JOIN tb_alunos e
  ON e.id_aluno = p.id_aluno

  WHERE e.id_aluno = param_id_aluno

  GROUP BY a.id_materia;



-- Abre o cursor
OPEN cursor_relatorio;



-- Armazena a quantidade de linhas na variável
SELECT FOUND_ROWS() INTO linhas;



-- Executa o loop para tratar os dados
repeticao: LOOP

  FETCH  cursor_relatorio
  INTO   var_id_aluno, var_nome, var_ra, var_id_materia;

  -- Sai do loop se não tiver nenhuma linha, ou se já tiver processado todas elas
  IF fim THEN
    CLOSE cursor_relatorio;
    LEAVE repeticao;
  END IF;

  -- Contabiliza a quantidade de aulas do aluno na matéria
  SET var_total_aulas = (SELECT COUNT(a.id_aula) AS aulas
                         FROM tb_aulas a

                         INNER JOIN tb_matricula_materia mm
                         ON mm.id_materia = a.id_materia

                         INNER JOIN tb_alunos e
                         ON e.id_aluno = mm.id_aluno

                         WHERE mm.id_materia = var_id_materia
                         AND e.id_aluno = var_id_aluno);


  -- Atualiza a tabela temporária do relatório
  UPDATE tb_Relatorio_Faltas f
  SET f.aulas = var_total_aulas
  WHERE id_materia = var_id_materia;

  -- Ajusta a variável de controle das linhas processadas
  SET controle = controle + 1;

END LOOP repeticao;



/*Retorna o relatório*/
SELECT nome, ra, materia, aulas, presencas
FROM tb_Relatorio_Faltas;


END
